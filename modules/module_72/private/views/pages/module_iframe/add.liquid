---
slug: module_72/module_iframe/add
response_headers: >
  {
    "X-Frame-Options": null
  }
authorization_policies:
  - modules/siteglide_system/module_is_in_admin
layout: modules/module_72/templates/1
---
<h1>Add new property</h1>
<a class="btn btn-primary mb-4" href="/module_72/module_iframe/index?{% include "modules/siteglide_system/modules/auth" -%}">View all properties</a>

{% graphql image_upload = "modules/module_72/properties/image_presign" %}
{% assign data = image_upload.property_upload_presigned_url %}

<form action="{{ data.upload_url }}" data-s3-uppy="form" hidden>
  {% for field in data.upload_url_payload %}
      <input type="hidden" name="{{ field[0] }}" value='{{ field[1] }}'>
    {% endfor %}
</form>

<form data-form="create">
  <label for="name">Name* :</label>
  <input required name="name" id="name" type="text" class="form-control mb-4">
  <label for="location">Location* :</label>
  <input required name="location" id="location" class="form-control mb-4">
  <label for="bedrooms">Bedrooms* :</label>
  <input required name="bedrooms" id="bedrooms" type="number" min="1" class="form-control mb-4">
  <label for="bathrooms">Bathrooms* :</label>
  <input required name="bathrooms" id="bathrooms" type="number" min="1" class="form-control mb-4">
  <label for="image">Image:</label>
  <input name="image" id="image" hidden />
  <div id="drag-drop-area" class="mb-4"></div>
  <button class="btn btn-primary mb-5" id="submitBtn">Submit</button>
</form>

<script>
  const request = ({ form }) => {
    var formData = new FormData(form);
    var data = {};
    for(var field of formData.entries()) {
      data[field[0]] = field[1];
    }

    fetch('/module_72/module_iframe/api/add-item?{% include "modules/siteglide_system/modules/auth" -%}', {
      credentials: "same-origin",
      method: "POST",
      body: JSON.stringify(data),
      headers: {
        SEC_FETCH_DEST: 'iframe'
      }
    }).then(() => {
      alert("New property added!");
      window.location.href="/module_72/module_iframe/index?{% include 'modules/siteglide_system/modules/auth' -%}"
    })
  };
  const Create = event => {
    event.preventDefault();
    request({
      form: event.target
    })
  };
  const createForm = document.querySelector('[data-form="create"]');
  createForm.addEventListener("submit", Create);
</script>


<link href="https://transloadit.edgly.net/releases/uppy/v1.6.0/uppy.css" rel="stylesheet">
<script src="https://transloadit.edgly.net/releases/uppy/v1.6.0/uppy.js" defer></script>
<script src="{{ 'modules/module_72/images.js' | asset_url }}" defer></script>